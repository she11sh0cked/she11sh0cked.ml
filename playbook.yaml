- name: Media Server
  hosts: all
  vars_files:
    - vars.yaml
    - vars.secret.yaml
  gather_facts: false
  become: true
  tasks:
    ############################# DEPENDENCIES

    - name: Install ansible packages
      ansible.builtin.apt:
        pkg: "{{ ansible_packages }}"
        state: present
        update_cache: true

    - name: Install ansible python packages
      ansible.builtin.pip:
        name: "{{ ansible_python_packages }}"
        state: present

    ############################# DOCKER

    - name: Add docker's GPG key
      ansible.builtin.apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present

    - name: Add docker's repository
      ansible.builtin.apt_repository:
        repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu jammy stable
        state: present

    - name: Remove old docker packages
      ansible.builtin.apt:
        pkg:
          - docker
          - docker-engine
          - docker.io
          - containerd
          - runc
        state: absent

    ############################# SYSTEM

    - name: Install packages
      ansible.builtin.apt:
        pkg: "{{ packages }}"
        state: present
        update_cache: true

    - name: Create downloads folder structure
      ansible.builtin.file:
        path: "{{ item }}"
        owner: "{{ user }}"
        group: "{{ user }}"
        state: directory
        mode: 0755
      loop:
        - "{{ storage_dir }}/downloads/complete"
        - "{{ storage_dir }}/downloads/incomplete"

    - name: Symlink downloads folder
      ansible.builtin.file:
        src: "{{ storage_dir }}/downloads"
        dest: "{{ downloads_dir }}"
        owner: "{{ user }}"
        group: "{{ user }}"
        mode: 0755
        state: link

    - name: Create media folder structure
      ansible.builtin.file:
        path: "{{ item }}"
        owner: "{{ user }}"
        group: "{{ user }}"
        state: directory
        mode: 0755
      loop:
        - "{{ storage_dir }}/media/movies"
        - "{{ storage_dir }}/media/shows"

    - name: Symlink media folder
      ansible.builtin.file:
        src: "{{ storage_dir }}/media"
        dest: "{{ media_dir }}"
        owner: "{{ user }}"
        group: "{{ user }}"
        mode: 0755
        state: link

    ############################# MEDIA SERVER

    - name: Create docker-compose.yml file
      ansible.builtin.copy:
        src: files/docker-compose.yml
        dest: "{{ user_dir }}/docker-compose.yml"
        owner: "{{ user }}"
        group: "{{ user }}"
        mode: 0644

    - name: Create .env file
      ansible.builtin.template:
        src: files/.env
        dest: "{{ user_dir }}/.env"
        owner: root
        group: root
        mode: 0600

    - name: Create secrets folder
      ansible.builtin.file:
        path: "{{ secrets_dir }}"
        owner: root
        group: root
        state: directory
        mode: 0600

    - name: Check if traefik_forward_auth secret exists
      ansible.builtin.stat:
        path: "{{ secrets_dir }}/traefik_forward_auth"
      register: file_stat

    - name: Create traefik_forward_auth secret
      vars:
        traefik_forward_auth_secret: "{{ lookup('password', '/dev/null length=32 chars=ascii_letters,digits') }}"
      ansible.builtin.template:
        src: files/secrets/traefik_forward_auth
        dest: "{{ secrets_dir }}/traefik_forward_auth"
        owner: root
        group: root
        mode: 0600
      when: not file_stat.stat.exists

    - name: Copy appdata folder
      ansible.builtin.copy:
        src: files/appdata/
        dest: "{{ appdata_dir }}"
        owner: "{{ user }}"
        group: "{{ user }}"
        mode: 0644

    - name: Create appdata/traefik/acme.json file
      ansible.builtin.file:
        path: "{{ appdata_dir }}/traefik/acme.json"
        owner: "{{ user }}"
        group: "{{ user }}"
        state: touch
        mode: 0600

    - name: Create docker containers
      community.docker.docker_compose:
        project_src: "{{ user_dir }}"
        state: present

    - name: Wait for containers to start
      ansible.builtin.wait_for:
        host: "{{ ansible_host }}"
        port: 80
        state: started
        delay: 5
        timeout: 300

    - name: Fix AuthenticationMethod in prowlarr's config.xml
      ansible.builtin.replace:
        path: "{{ appdata_dir }}/prowlarr/config.xml"
        regexp: '^(\s*<AuthenticationMethod>).*(</AuthenticationMethod>)$'
        replace: '\1External\2'
